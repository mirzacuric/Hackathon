// <auto-generated />
using Hackathon.Database.DAL;
using Hackathon.Database.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Hackathon.Migrations
{
    [DbContext(typeof(HackathonContext))]
    [Migration("20171201230905_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hackathon.Database.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.Property<DateTime>("InsertDate");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Hackathon.Database.Entities.Disability", b =>
                {
                    b.Property<int>("DisabilityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisabilityName");

                    b.Property<DateTime>("InsertDate");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("DisabilityId");

                    b.ToTable("Disabilities");
                });

            modelBuilder.Entity("Hackathon.Database.Entities.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DisabilityId");

                    b.Property<string>("FeatureName");

                    b.Property<DateTime>("InsertDate");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("FeatureId");

                    b.HasIndex("DisabilityId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("Hackathon.Database.Entities.FeatureSchool", b =>
                {
                    b.Property<int>("FeatureId");

                    b.Property<int>("SchoolId");

                    b.HasKey("FeatureId", "SchoolId");

                    b.HasIndex("SchoolId");

                    b.ToTable("FeaturesSchools");
                });

            modelBuilder.Entity("Hackathon.Database.Entities.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("InsertDate");

                    b.Property<string>("LocationName");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Hackathon.Database.Entities.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("InsertDate");

                    b.Property<int?>("LocationId");

                    b.Property<string>("SchoolName");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("SchoolId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("Hackathon.Database.Entities.Feature", b =>
                {
                    b.HasOne("Hackathon.Database.Entities.Disability")
                        .WithMany("Features")
                        .HasForeignKey("DisabilityId");
                });

            modelBuilder.Entity("Hackathon.Database.Entities.FeatureSchool", b =>
                {
                    b.HasOne("Hackathon.Database.Entities.Feature", "Feature")
                        .WithMany("FeaturesSchools")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hackathon.Database.Entities.School", "School")
                        .WithMany("FeaturesSchools")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hackathon.Database.Entities.School", b =>
                {
                    b.HasOne("Hackathon.Database.Entities.Category")
                        .WithMany("Schools")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Hackathon.Database.Entities.Location", "Location")
                        .WithMany("Schools")
                        .HasForeignKey("LocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
